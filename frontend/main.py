"""
–ü—Ä–æ–≥—Ä–∞–º–º–∞: Frontend —á–∞—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞
–í–µ—Ä—Å–∏—è: 1.0
"""

import os

import yaml
import streamlit as st

from src.data.get_data import get_dataset
from src.plotting.charts import (
    plot_count_year_fees,
    plot_distributions,
    plot_category_distribution,
    plot_fees_dummies,
)

from src.train.training import start_training
from src.evaluate.evaluate import evaluate_input
from src.data.get_data import load_data
from src.evaluate.evaluate import evaluate_from_file

CONFIG_PATH = "../config/params.yml"


def main_page():
    """
    –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–æ–µ–∫—Ç–∞
    """
    with open(CONFIG_PATH) as file:
        config = yaml.load(file, Loader=yaml.FullLoader)
    movie_logo_path = config["movie_logo_path"]

    st.image(movie_logo_path, width=600)

    st.markdown("# –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞")
    st.title("MLOps: –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Å—Å–æ–≤—ã—Ö —Å–±–æ—Ä–æ–≤ —Ñ–∏–ª—å–º–æ–≤ –≤ –°–®–ê üé¨ üí∞")
    st.write(
        """
        –ü—Ä–æ–µ–∫—Ç —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –º–æ–¥–µ–ª—å –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –¥–ª—è 
        –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –∫–∞—Å—Å–æ–≤—ã—Ö —Å–±–æ—Ä–æ–≤ —Ñ–∏–ª—å–º–æ–≤ –≤ –°–®–ê, 
        –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –¥–∞–Ω–Ω—ã—Ö, —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–∞ Kinopoisk.
        –í–∫–ª—é—á–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è–º–∏, –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –æ–±—É—á–µ–Ω–∏—è 
         –º–æ–¥–µ–ª–∏ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è —Å–±–æ—Ä–æ–≤."""
    )

    markdown_text = """
        ### –û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª–µ–π
        - **movie_id**: —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ñ–∏–ª—å–º–∞
        - **movie_name**: –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞
        - **year**: –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞ —Ñ–∏–ª—å–º–∞
        - **movieLength**: –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ñ–∏–ª—å–º–∞
        - **ageRating, ratingMpaa**: –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ —Ä–µ–π—Ç–∏–Ω–≥–∏ —Ñ–∏–ª—å–º–∞
        - **type**: —Ç–∏–ø –∫–∞—Ä—Ç–∏–Ω—ã (—Ñ–∏–ª—å–º/–º—É–ª—å—Ç—Ñ–∏–ª—å–º)
        - **genres**: –∂–∞–Ω—Ä—ã —Ñ–∏–ª—å–º–∞
        - **countries**: —Å—Ç—Ä–∞–Ω—ã —Ñ–∏–ª—å–º–∞
        - **Production**: —Å—Ç—É–¥–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
        - **Special_effects**: —Å—Ç—É–¥–∏–∏ —Å–ø–µ—Ü—ç—Ñ—Ñ–µ–∫—Ç–æ–≤
        - **budget**: –±—é–¥–∂–µ—Ç —Ñ–∏–ª—å–º–∞
        - **videos_trailers_number**: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–π–ª–µ—Ä–æ–≤
        - **rating_kp, rating_imdb**: —Ä–µ–π—Ç–∏–Ω–≥–∏ —Ñ–∏–ª—å–º–∞ –Ω–∞ –ö–∏–Ω–æ–ø–æ–∏—Å–∫–µ –∏ IMDb
        - **rating_filmCritics**: —Ä–µ–π—Ç–∏–Ω–≥ –∫–∏–Ω–æ–∫—Ä–∏—Ç–∏–∫–æ–≤ –≤ –º–∏—Ä–µ
        - **votes_kp, votes_imdb**: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ü–µ–Ω–æ–∫ —Ñ–∏–ª—å–º–∞ –Ω–∞ –ö–∏–Ω–æ–ø–æ–∏—Å–∫–µ –∏ IMDb
        - **votes_filmCritics**: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ü–µ–Ω–æ–∫ –∫–∏–Ω–æ–∫—Ä–∏—Ç–∏–∫–æ–≤ –≤ –º–∏—Ä–µ
        - **votes_await**: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–∂–∏–¥–∞—é—â–∏—Ö —Ñ–∏–ª—å–º –Ω–∞ –ö–∏–Ω–æ–ø–æ–∏—Å–∫–µ
        - **actor_metric**: –º–µ—Ç—Ä–∏–∫–∞ –∞–∫—Ç–µ—Ä–æ–≤
        - **director_metric**: –º–µ—Ç—Ä–∏–∫–∞ —Ä–µ–∂–∏—Å—Å–µ—Ä–æ–≤
        - **writer_metric**: –º–µ—Ç—Ä–∏–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—Å—Ç–æ–≤
        - **fees_usa**: —Å–±–æ—Ä—ã —Ñ–∏–ª—å–º–∞ –≤ –°–®–ê
    """
    st.markdown(markdown_text)


def exploratory():
    """
    Exploratory data analysis
    """
    st.markdown("# Exploratory data analysisÔ∏è")

    with open(CONFIG_PATH) as file:
        config = yaml.load(file, Loader=yaml.FullLoader)
    preprocessing_config = config["preprocessing"]

    data = get_dataset(
        dataset_path=preprocessing_config["original_data_path"],
        sep=preprocessing_config["data_separator"],
    )

    st.write(data.head())

    year_fees_movie_count = st.expander("–ì–æ–¥ —Ä–µ–ª–∏–∑–∞ - —Å–±–æ—Ä—ã –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∏–ª—å–º–æ–≤")
    age_rating_fees = st.expander("–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–π —Ä–µ–π—Ç–∏–Ω–≥ —Ñ–∏–ª—å–º–∞ –∏ —Å–±–æ—Ä—ã")
    movie_type_fees = st.expander("–¢–∏–ø –∫–∞—Ä—Ç–∏–Ω—ã –∏ —Å–±–æ—Ä—ã")
    fees_genres = st.expander("–ñ–∞–Ω—Ä —Ñ–∏–ª—å–º–∞ –∏ —Å–±–æ—Ä—ã")

    with year_fees_movie_count:
        st.markdown(
            "**–ì–∏–ø–æ—Ç–µ–∑–∞:** –° —Ç–µ—á–µ–Ω–∏–µ–º –ª–µ—Ç, —Å–±–æ—Ä—ã —Ñ–∏–ª—å–º–æ–≤ –≤ –°–®–ê —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç—Å—è, "
            "—Ç–∞–∫–∂–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø—É—â–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤."
        )
        st.pyplot(
            plot_count_year_fees(
                df=data,
                target_col=preprocessing_config["target_column"],
                year_col=preprocessing_config["year_column"],
            )
        )
        st.markdown("#### –í—ã–≤–æ–¥—ã:")
        st.markdown("**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø—É—â–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤:**")
        st.write(
            """
        –í –ø–µ—Ä–∏–æ–¥ —Å 2000 –ø–æ 2008 –Ω–∞–±–ª—é–¥–∞–µ—Ç—Å—è –æ–±—â–∞—è —Ç–µ–Ω–¥–µ–Ω—Ü–∏—è –∫ —É–≤–µ–ª–∏—á–µ–Ω–∏—é
        –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ñ–∏–ª—å–º–æ–≤. –≠—Ç–æ—Ç —Ç—Ä–µ–Ω–¥ –º–æ–∂–µ—Ç –æ—Ç—Ä–∞–∂–∞—Ç—å –æ–±—â–∏–π —Ä–æ—Å—Ç –∏ –¥–∏–Ω–∞–º–∏—á–Ω–æ—Å—Ç—å
        –∫–∏–Ω–æ–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç–∏ –≤ –Ω–∞—á–∞–ª–µ 21-–≥–æ –≤–µ–∫–∞. –ü–æ—Å–ª–µ 2008 –≥–æ–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∏–ª—å–º–æ–≤
        –≤ –∫–∞–∂–¥–æ–º –≥–æ–¥—É –∫–æ–ª–µ–±–ª–µ—Ç—Å—è, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—è —á–µ—Ç–∫–æ–π —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏ –∫ —Ä–æ—Å—Ç—É –∏–ª–∏ —É–º–µ–Ω—å—à–µ–Ω–∏—é. 
        """
        )
        st.markdown("**–ú–µ–¥–∏–∞–Ω–Ω—ã–µ —Å–±–æ—Ä—ã:**")
        st.write(
            """
         –° 2000 –ø–æ 2010 –≥–æ–¥ –Ω–∞–±–ª—é–¥–∞–µ—Ç—Å—è —Ç–µ–Ω–¥–µ–Ω—Ü–∏—è –∫ —É–º–µ–Ω—å—à–µ–Ω–∏—é –º–µ–¥–∏–∞–Ω–Ω—ã—Ö —Å–±–æ—Ä–æ–≤
          —Ñ–∏–ª—å–º–æ–≤ –Ω–∞ —Ñ–æ–Ω–µ —Ä–æ—Å—Ç–∞ –∏—Ö –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞. –ü—Ä–∏—á–∏–Ω–æ–π —ç—Ç–æ–º—É –º–æ–∂–µ—Ç –±—ã—Ç—å
          –±–æ–ª—å—à–µ–µ —á–∏—Å–ª–æ —Ñ–∏–ª—å–º–æ–≤ —Å –Ω–∏–∑–∫–∏–º–∏ —Å–±–æ—Ä–∞–º–∏, —á—Ç–æ —Å–Ω–∏–∂–∞–µ—Ç –º–µ–¥–∏–∞–Ω—É.
        """
        )
        st.markdown("**–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Å–±–æ—Ä—ã:**")
        st.write(
            """
        –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Å–±–æ—Ä—ã —Ñ–∏–ª—å–º–æ–≤ –≤ –°–®–ê –∏–º–µ—é—Ç —Ç–µ–Ω–¥–µ–Ω—Ü–∏—é –∫ —É–≤–µ–ª–∏—á–µ–Ω–∏—é —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º.
         –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±—É—Å–ª–æ–≤–ª–µ–Ω–æ –∏–Ω—Ñ–ª—è—Ü–∏–µ–π, —Ä–æ—Å—Ç–æ–º –∫–∏–Ω–æ–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞, 
         —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏—è–º–∏, –∞ —Ç–∞–∫–∂–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π.
        """
        )

    with age_rating_fees:
        st.markdown(
            """
        **–ì–∏–ø–æ—Ç–µ–∑–∞:** –§–∏–ª—å–º—ã, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –¥–ª—è –±–æ–ª–µ–µ —à–∏—Ä–æ–∫–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏ 
        (–Ω–∞–ø—Ä–∏–º–µ—Ä, 6+, 12+ –∏ 16+), –∏–º–µ—é—Ç —Ç–µ–Ω–¥–µ–Ω—Ü–∏—é –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å –±–æ–ª—å—à–µ –∑—Ä–∏—Ç–µ–ª–µ–π 
        –∏ –∏–º–µ—Ç—å –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–µ —Å–±–æ—Ä—ã –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å —Ñ–∏–ª—å–º–∞–º–∏ –¥–ª—è –≤–∑—Ä–æ—Å–ª–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏ (18+).
        """
        )
        st.pyplot(
            plot_distributions(
                df=data,
                category_col="ageRating",
                value_col=preprocessing_config["target_column"],
                title_kde="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–±–æ—Ä–æ–≤ –≤ –°–®–ê –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞",
                title_boxplot="Boxplot —Å–±–æ—Ä–æ–≤ –≤ –°–®–ê –≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞",
            )
        )
        st.markdown("#### –í—ã–≤–æ–¥—ã:")
        st.markdown("**–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Å–±–æ—Ä—ã:**")
        st.write(
            """
        –§–∏–ª—å–º—ã —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º 6+ –∏ 12+ –∏–º–µ—é—Ç –≤—ã—Å—à–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Å–±–æ—Ä—ã. 
        –§–∏–ª—å–º—ã —Å —Ç–∞–∫–∏–º–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏ –∏–º–µ—é—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Å—Ç–∞—Ç—å –±–ª–æ–∫–±–∞—Å—Ç–µ—Ä–∞–º–∏.
        """
        )
        st.markdown("**–ú–µ–¥–∏–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:**")
        st.write(
            """
        –ú–µ–¥–∏–∞–Ω–Ω—ã–µ —Å–±–æ—Ä—ã –¥–ª—è —Ñ–∏–ª—å–º–æ–≤ —Å —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏ 6+, 12+ –∏ 16+ 
        –ø—Ä–∏–º–µ—Ä–Ω–æ —Å–æ–ø–æ—Å—Ç–∞–≤–∏–º—ã –∏ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –≤—ã—à–µ, —á–µ–º –¥–ª—è 18+.
        """
        )
        st.markdown("**–í—ã–±—Ä–æ—Å—ã:**")
        st.write(
            """
        –§–∏–ª—å–º—ã —Å —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏ 12+, 16+ –∏ 6+ –∏–º–µ—é—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ 
        –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã—Å–æ–∫–∏—Ö –≤—ã–±—Ä–æ—Å–æ–≤ –≤ —Å–±–æ—Ä–∞—Ö. 
        –ó–Ω–∞—á–∏—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∏–ª—å–º—ã –≤ —ç—Ç–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö –∏–º–µ–ª–∏ –æ–≥—Ä–æ–º–Ω—ã–π —É—Å–ø–µ—Ö.
        """
        )
        st.markdown("**–û–±—â–∏–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è:**")
        st.write(
            """
        –§–∏–ª—å–º—ã —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º 18+ —Å–∫–ª–æ–Ω–Ω—ã –∏–º–µ—Ç—å –º–µ–Ω–µ–µ —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ —Å–±–æ—Ä—ã –∏ 
        –º–µ–Ω—å—à–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –¥–ª—è –≤—ã—Å–æ–∫–∏—Ö –¥–æ—Ö–æ–¥–æ–≤ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å —Ñ–∏–ª—å–º–∞–º–∏ 
        –¥—Ä—É–≥–∏—Ö —Ä–µ–π—Ç–∏–Ω–≥–æ–≤, —Ö–æ—Ç—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –∫–æ–Ω–µ—á–Ω–æ, —Å—É—â–µ—Å—Ç–≤—É—é—Ç.
        """
        )

    with movie_type_fees:
        st.markdown(
            """
        **–ì–∏–ø–æ—Ç–µ–∑–∞:** –ú—É–ª—å—Ç—Ñ–∏–ª—å–º—ã –≤ —Å—Ä–µ–¥–Ω–µ–º —Å–æ–±–∏—Ä–∞—é—Ç –±–æ–ª—å—à–µ –¥–µ–Ω–µ–≥ –≤ –°–®–ê, —á–µ–º –∫–∏–Ω–æ—Ñ–∏–ª—å–º—ã.
        """
        )
        st.pyplot(
            plot_category_distribution(
                df=data,
                category_col="type",
                title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–∏–ª—å–º–æ–≤ –ø–æ —Ç–∏–ø—É –∫–∞—Ä—Ç–∏–Ω—ã",
            )
        )
        st.pyplot(
            plot_distributions(
                df=data,
                category_col="type",
                value_col=preprocessing_config["target_column"],
                title_kde="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–±–æ—Ä–æ–≤ –≤ –°–®–ê –≤ —Ä–∞–∑—Ä–µ–∑–µ —Ç–∏–ø–∞ –∫–∞—Ä—Ç–∏–Ω—ã",
                title_boxplot="Boxplot —Å–±–æ—Ä–æ–≤ –≤ –°–®–ê –≤ —Ä–∞–∑—Ä–µ–∑–µ —Ç–∏–ø–∞ –∫–∞—Ä—Ç–∏–Ω—ã",
            )
        )
        st.markdown("#### –í—ã–≤–æ–¥—ã:")
        st.markdown(
            """
        - –ë–æ–ª—å—à–∞—è —á–∞—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —Ñ–∏–ª—å–º–∞–º (–Ω–µ –º—É–ª—å—Ç—Ñ–∏–ª—å–º–∞–º)
        - –ú–µ–¥–∏–∞–Ω–Ω—ã–π —Å–±–æ—Ä –º—É–ª—å—Ç—Ñ–∏–ª—å–º–æ–≤ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 60 –º–ª–Ω –¥–æ–ª–ª–∞—Ä–æ–≤,
         —á—Ç–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –≤—ã—à–µ, —á–µ–º –¥–ª—è –∫–∏–Ω–æ—Ñ–∏–ª—å–º–æ–≤ (9 –º–ª–Ω –¥–æ–ª–ª–∞—Ä–æ–≤). 
         –¢–∞–∫–∂–µ –µ—Å—Ç—å –º—É–ª—å—Ç—Ñ–∏–ª—å–º—ã —Å –≤—ã–¥–∞—é—â–∏–º–∏—Å—è —Å–±–æ—Ä–∞–º–∏, –ø—Ä–µ–≤—ã—à–∞—é—â–∏–º–∏ 400 –º–ª–Ω –¥–æ–ª–ª–∞—Ä–æ–≤.
        - –ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Ç–æ —á—Ç–æ –º—É–ª—å—Ç—Ñ–∏–ª—å–º–æ–≤ –≥–æ—Ä–∞–∑–¥–æ –º–µ–Ω—å—à–µ, –∏—Ö –º–µ–¥–∏–∞–Ω–∞ —Å–±–æ—Ä–æ–≤ –≤—ã—à–µ. 
          –≠—Ç–æ –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ —Ç–æ, —á—Ç–æ –º—É–ª—å—Ç—Ñ–∏–ª—å–º—ã –≤ —Ü–µ–ª–æ–º –±–æ–ª–µ–µ –ø—Ä–∏–±—ã–ª—å–Ω—ã, 
          —á–µ–º –∫–∏–Ω–æ—Ñ–∏–ª—å–º—ã, –∏–ª–∏ –∏–º–µ—é—Ç –±–æ–ª—å—à—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é –≤ –°–®–ê.
        """
        )

    with fees_genres:
        st.markdown(
            """
        **–ì–∏–ø–æ—Ç–µ–∑–∞:** –§–∏–ª—å–º—ã —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –∂–∞–Ω—Ä–∞–º–∏ —Å–æ–±–∏—Ä–∞—é—Ç –±–æ–ª—å—à–µ –¥–µ–Ω–µ–≥.
        """
        )
        st.pyplot(
            plot_fees_dummies(
                df=data,
                dummies_col="genres",
                target_col=preprocessing_config["target_column"],
                title_barplot="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –∂–∞–Ω—Ä–∞–º",
                title_boxplot="Boxplot —Å–±–æ—Ä–æ–≤ —Ñ–∏–ª—å–º–æ–≤ –≤ –°–®–ê –ø–æ –∂–∞–Ω—Ä–∞–º",
            )
        )
        st.markdown("#### –í—ã–≤–æ–¥—ã:")
        st.markdown("**–°–±–æ—Ä—ã –ø–æ –ñ–∞–Ω—Ä–∞–º:**")
        st.markdown(
            """
          - **–î—Ä–∞–º–∞:** –ü–æ–ø—É–ª—è—Ä–Ω—ã–π –∂–∞–Ω—Ä —Å–æ —Å—Ä–µ–¥–Ω–∏–º–∏ —Å–±–æ—Ä–∞–º–∏ –∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫–∞—Å—Å–æ–≤—ã–º–∏ —Ö–∏—Ç–∞–º–∏.
          - **–ö–æ–º–µ–¥–∏—è:** –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥—Ä–∞–º–µ, –≤—Ç–æ—Ä–æ–π –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏, —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –≤—ã—Å–æ–∫–∏–º–∏ –≤—ã–±—Ä–æ—Å–∞–º–∏ –≤ —Å–±–æ—Ä–∞—Ö.
          - **–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è:** –ú–µ–Ω—å—à–∞—è –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å, –Ω–æ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–µ —Å—Ä–µ–¥–Ω–∏–µ —Å–±–æ—Ä—ã.
          - **–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞ –∏ –º—É–ª—å—Ç—Ñ–∏–ª—å–º—ã:** –ù–µ —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ, –Ω–æ —á–∞—Å—Ç–æ —Å –≤—ã—Å–æ–∫–∏–º–∏ —Å–±–æ—Ä–∞–º–∏.
        """
        )
        st.markdown("**–í—ã–±—Ä–æ—Å—ã:**")
        st.write(
            """
            –ü–æ–∫–∞–∑—ã–≤–∞—é—Ç, —á—Ç–æ —Ö–æ—Ç—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ñ–∏–ª—å–º–æ–≤ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö
            –∂–∞–Ω—Ä–∞—Ö –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å –∫–∞—Å—Å–æ–≤—ã–º–∏ —Ö–∏—Ç–∞–º–∏, –∏—Å–∫–ª—é—á–µ–Ω–∏—è –±—ã–≤–∞—é—Ç.
        """
        )
        st.markdown("**–û–±—â–∏–π –≤—ã–≤–æ–¥:**")
        st.write(
            """
         –£—Å–ø–µ—Ö —Ñ–∏–ª—å–º–∞ –≤ –∫–∞—Å—Å–æ–≤—ã—Ö —Å–±–æ—Ä–∞—Ö –Ω–µ –≤—Å–µ–≥–¥–∞ –∫–æ—Ä—Ä–µ–ª–∏—Ä—É–µ—Ç —Å –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å—é –µ–≥–æ –∂–∞–Ω—Ä–∞.
         –ú–µ–Ω–µ–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∂–∞–Ω—Ä—ã –º–æ–≥—É—Ç –∏–º–µ—Ç—å –≤—ã—Å–æ–∫–∏–µ —Å—Ä–µ–¥–Ω–∏–µ —Å–±–æ—Ä—ã, —Ç–æ–≥–¥–∞ –∫–∞–∫ –±–æ–ª–µ–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ
         –∂–∞–Ω—Ä—ã —á–∞—Å—Ç–æ –∏–º–µ—é—Ç –≤—ã–±—Ä–æ—Å—ã, —Å—Ç–∞–Ω–æ–≤—è—Å—å –∫–∞—Å—Å–æ–≤—ã–º–∏ —Ö–∏—Ç–∞–º–∏, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –Ω–∏–∑–∫–∏–µ –º–µ–¥–∏–∞–Ω–Ω—ã–µ —Å–±–æ—Ä—ã.
        """
        )


def training():
    """
    –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –º–æ–¥–µ–ª–∏
    """
    st.markdown("# Training model LightGBM")
    # get params
    with open(CONFIG_PATH) as file:
        config = yaml.load(file, Loader=yaml.FullLoader)
    # endpoint
    endpoint = config["endpoints"]["train"]

    if st.button("Start training"):
        start_training(config=config, endpoint=endpoint)


def prediction_from_file():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –∏–∑ —Ñ–∞–π–ª–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
    """
    st.markdown("# Prediction")
    with open(CONFIG_PATH) as file:
        config = yaml.load(file, Loader=yaml.FullLoader)
    endpoint = config["endpoints"]["prediction_from_file"]
    sep = config["preprocessing"]["data_separator"]

    upload_file = st.file_uploader(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏",
        type=["csv", "xlsx"],
        accept_multiple_files=False,
    )
    if upload_file:
        dataset_csv_df, files = load_data(data_path=upload_file, sep=sep)
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
        if os.path.exists(config["train"]["model_path"]):
            evaluate_from_file(data=dataset_csv_df, endpoint=endpoint, files=files)
        else:
            st.error("–°–Ω–∞—á–∞–ª–∞ –æ–±—É—á–∏—Ç–µ –º–æ–¥–µ–ª—å")


def prediction():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –ø—É—Ç–µ–º –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
    """
    st.markdown("# Prediction")
    with open(CONFIG_PATH) as file:
        config = yaml.load(file, Loader=yaml.FullLoader)

    endpoint = config["endpoints"]["prediction_input"]
    unique_data_path = config["preprocessing"]["unique_values_path"]
    dummies_info = config["preprocessing"]["dummies"]
    gradings = config["preprocessing"]["grading_values"]

    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
    if os.path.exists(config["train"]["model_path"]):
        evaluate_input(
            unique_data_path=unique_data_path,
            dummies_info=dummies_info,
            gradings=gradings,
            endpoint=endpoint,
        )
    else:
        st.error("–°–Ω–∞—á–∞–ª–∞ –æ–±—É—á–∏—Ç–µ –º–æ–¥–µ–ª—å")


def main():
    """
    –°–±–æ—Ä–∫–∞ –ø–∞–π–ø–ª–∞–π–Ω–∞ –≤ –æ–¥–Ω–æ–º –±–ª–æ–∫–µ
    """

    page_names_to_funcs = {
        "–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞": main_page,
        "Exploratory data analysis": exploratory,
        "Training model": training,
        "Prediction from file": prediction_from_file,
        "Prediction": prediction,
    }

    st.sidebar.markdown("## –ú–µ–Ω—é")

    selected_page = st.sidebar.radio("", page_names_to_funcs.keys())
    page_names_to_funcs[selected_page]()


if __name__ == "__main__":
    main()
